name: Semantic versioning

on:
  push:
    branches: [ master, test-republish ]

jobs:
  cancel-previous:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
  
  semantic-version:
    name: Semantic versioning
    runs-on: ubuntu-latest
    needs: [cancel-previous]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create semantic versioning
        id: sem_ver
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          change_path: "Chart.yaml"
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: false
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          
      # - name: Create a GitHub release
      #   uses: actions/create-release@v1
      #   if: ${{ steps.sem_ver.outputs.changed == 'true' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.sem_ver.outputs.version_tag }}
      #     release_name: Release ${{ steps.sem_ver.outputs.version_tag }}

      - name: Azure Login
        uses: azure/login@v1
        # if: ${{ steps.sem_ver.outputs.changed == 'true' }}
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI deploy to ACR
        uses: azure/CLI@v1
        # if: ${{ steps.sem_ver.outputs.changed == 'true' }}
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az acr helm install-cli --client-version 3.6.3 --yes
            helm package .
            az acr helm push -n ${{ secrets.HELM_REGISTRY_P }} ddhub-messagebroker-${{ steps.sem_ver.outputs.major }}.${{ steps.sem_ver.outputs.minor }}.${{ steps.sem_ver.outputs.patch }}.tgz
